#!/bin/sh

# this script just makes low 10% to be stepped one by one
# but only in decreasing direction, otherwise it jumps back to 10
# instantly and then steps by 10

round() {
    printf "%.${2:-0}f" "$1"
}

actual=$(light -G)
actual=$(round $actual)
step=10
small_step=1
min_bound=10

# always go to 10 when under 10 (going up)
[ $actual -lt $min_bound ] \
    && [ $1 -gt 0 ] \
    && light -S 10 \
    && exit 0

[ $((actual+$1)) -le $min_bound ] \
    && step=$small_step

[ $1 -gt 0 ] \
    && new_val=$(($actual+$step)) \
    || new_val=$(($actual-$step))

light -S $new_val
